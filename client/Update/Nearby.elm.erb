module Update.Nearby exposing (update)

import Json.Convert.Predictions
import Task
import Date
import Http
import Model.Nearby exposing (..)
import Model.Common exposing (..)
import Json.Predictions
import Json.Decode.Predictions


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        RequestSchedule location ->
            let
                request =
                    requestNearby location.latitude location.longitude

                cmd =
                    Http.send ReceiveSchedule request
            in
                ( model, cmd )

        ReceiveSchedule (Ok json) ->
            let
                cmd =
                    Json.Convert.Predictions.toSchedule json
                        |> Task.succeed
                        |> Task.perform RequestTime
            in
                ( model, cmd )

        ReceiveSchedule (Err error) ->
            let
                message =
                    case error of
                        Http.BadUrl message ->
                            message

                        Http.Timeout ->
                            "Timeout"

                        Http.NetworkError ->
                            "Network error"

                        Http.BadStatus response ->
                            toString response.status.code

                        Http.BadPayload message _ ->
                            message
            in
                ( Error message, Cmd.none )

        RequestTime schedule ->
            ( model, Task.perform (ReceiveTime schedule) Date.now )

        ReceiveTime schedule date ->
            ( ReceivedDate schedule date, Cmd.none )

        None ->
            ( Nil, Cmd.none )


requestNearby : Float -> Float -> Http.Request Json.Predictions.Schedule
requestNearby latitude longitude =
    let
        url =
            "<%= restbus_url %>"

        fullUrl =
            url ++ "?latitude=" ++ (toString latitude) ++ "&longitude=" ++ (toString longitude)
    in
        Http.get fullUrl Json.Decode.Predictions.nearby
